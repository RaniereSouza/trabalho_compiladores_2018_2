Estado 8 conflitos: 1 de deslocamento/redução
Estado 74 conflitos: 1 de deslocamento/redução


Gramática

    0 $accept: program $end

    1 program: %empty
    2        | declaration_list

    3 declaration_list: declaration_list declaration
    4                 | declaration

    5 declaration: fun_declaration
    6            | var_declaration

    7 var_declaration: type_specifier ID SEMIC
    8                | type_specifier ID L_BRA NUM R_BRA SEMIC

    9 $@1: %empty

   10 fun_declaration: fun_decl_head params R_PAR $@1 compound_stmt

   11 fun_decl_head: type_specifier ID L_PAR

   12 type_specifier: INT
   13               | VOID

   14 $@2: %empty

   15 params: $@2 param_list
   16       | VOID

   17 param_list: param_list COMMA param
   18           | param

   19 param: type_specifier ID
   20      | type_specifier ID L_BRA R_BRA

   21 compound_stmt: open_compd local_declarations statement_list close_compd

   22 open_compd: L_CUR

   23 close_compd: R_CUR

   24 local_declarations: %empty
   25                   | local_declarations var_declaration

   26 statement_list: %empty
   27               | statement_list statement

   28 statement: expression_stmt
   29          | compound_stmt
   30          | selection_stmt
   31          | iteration_stmt
   32          | return_stmt

   33 selection_stmt: selection_head scope_stmt
   34               | selection_head scope_stmt ELSE scope_stmt

   35 selection_head: IF L_PAR expression R_PAR

   36 iteration_stmt: iteration_head scope_stmt

   37 iteration_head: WHILE L_PAR expression R_PAR

   38 scope_stmt: return_stmt
   39           | common_stmt

   40 common_stmt: expression_stmt
   41            | compound_stmt
   42            | selection_stmt
   43            | iteration_stmt

   44 return_stmt: RET SEMIC
   45            | RET expression SEMIC

   46 expression_stmt: expression SEMIC
   47                | SEMIC

   48 $@3: %empty

   49 expression: var ASGN $@3 expression
   50           | simple_expression

   51 $@4: %empty

   52 simple_expression: additive_expression relop $@4 additive_expression
   53                  | additive_expression

   54 relop: LTE
   55      | GTE
   56      | LT
   57      | GT
   58      | EQ
   59      | NEQ

   60 $@5: %empty

   61 additive_expression: additive_expression addop $@5 term
   62                    | term

   63 addop: ADD
   64      | SUB

   65 $@6: %empty

   66 term: term mulop $@6 factor
   67     | factor

   68 mulop: MUL
   69      | DIV

   70 factor: L_PAR expression R_PAR
   71       | var
   72       | call
   73       | NUM

   74 var: ID

   75 $@7: %empty

   76 var: ID L_BRA $@7 expression R_BRA

   77 call: ID L_PAR args R_PAR

   78 args: %empty
   79     | arg_list

   80 arg_list: arg_list COMMA expression
   81         | expression


Terminais, com as regras onde eles aparecem

$end (0) 0
error (256)
NUM (258) 8 73
ID (259) 7 8 11 19 20 74 76 77
COMMA (260) 17 80
ADD (261) 63
SUB (262) 64
MUL (263) 68
DIV (264) 69
L_PAR (265) 11 35 37 70 77
R_PAR (266) 10 35 37 70 77
L_BRA (267) 8 20 76
R_BRA (268) 8 20 76
L_CUR (269) 22
R_CUR (270) 23
SEMIC (271) 7 8 44 45 46 47
ASGN (272) 49
LT (273) 56
GT (274) 57
LTE (275) 54
GTE (276) 55
EQ (277) 58
NEQ (278) 59
IF (279) 35
ELSE (280) 34
WHILE (281) 37
RET (282) 44 45
INT (283) 12
VOID (284) 13 16


Não terminais com as regras onde eles aparecem

$accept (30)
    à esquerda: 0
program (31)
    à esquerda: 1 2, à direita: 0
declaration_list (32)
    à esquerda: 3 4, à direita: 2 3
declaration (33)
    à esquerda: 5 6, à direita: 3 4
var_declaration (34)
    à esquerda: 7 8, à direita: 6 25
fun_declaration (35)
    à esquerda: 10, à direita: 5
$@1 (36)
    à esquerda: 9, à direita: 10
fun_decl_head (37)
    à esquerda: 11, à direita: 10
type_specifier (38)
    à esquerda: 12 13, à direita: 7 8 11 19 20
params (39)
    à esquerda: 15 16, à direita: 10
$@2 (40)
    à esquerda: 14, à direita: 15
param_list (41)
    à esquerda: 17 18, à direita: 15 17
param (42)
    à esquerda: 19 20, à direita: 17 18
compound_stmt (43)
    à esquerda: 21, à direita: 10 29 41
open_compd (44)
    à esquerda: 22, à direita: 21
close_compd (45)
    à esquerda: 23, à direita: 21
local_declarations (46)
    à esquerda: 24 25, à direita: 21 25
statement_list (47)
    à esquerda: 26 27, à direita: 21 27
statement (48)
    à esquerda: 28 29 30 31 32, à direita: 27
selection_stmt (49)
    à esquerda: 33 34, à direita: 30 42
selection_head (50)
    à esquerda: 35, à direita: 33 34
iteration_stmt (51)
    à esquerda: 36, à direita: 31 43
iteration_head (52)
    à esquerda: 37, à direita: 36
scope_stmt (53)
    à esquerda: 38 39, à direita: 33 34 36
common_stmt (54)
    à esquerda: 40 41 42 43, à direita: 39
return_stmt (55)
    à esquerda: 44 45, à direita: 32 38
expression_stmt (56)
    à esquerda: 46 47, à direita: 28 40
expression (57)
    à esquerda: 49 50, à direita: 35 37 45 46 49 70 76 80 81
$@3 (58)
    à esquerda: 48, à direita: 49
simple_expression (59)
    à esquerda: 52 53, à direita: 50
$@4 (60)
    à esquerda: 51, à direita: 52
relop (61)
    à esquerda: 54 55 56 57 58 59, à direita: 52
additive_expression (62)
    à esquerda: 61 62, à direita: 52 53 61
$@5 (63)
    à esquerda: 60, à direita: 61
addop (64)
    à esquerda: 63 64, à direita: 61
term (65)
    à esquerda: 66 67, à direita: 61 62 66
$@6 (66)
    à esquerda: 65, à direita: 66
mulop (67)
    à esquerda: 68 69, à direita: 66
factor (68)
    à esquerda: 70 71 72 73, à direita: 66 67
var (69)
    à esquerda: 74 76, à direita: 49 71
$@7 (70)
    à esquerda: 75, à direita: 76
call (71)
    à esquerda: 77, à direita: 72
args (72)
    à esquerda: 78 79, à direita: 77
arg_list (73)
    à esquerda: 80 81, à direita: 79 80


Estado 0

    0 $accept: . program $end

    INT   deslocar, e ir ao estado 1
    VOID  deslocar, e ir ao estado 2

    $padrão  reduzir usando a regra 1 (program)

    program           ir ao estado 3
    declaration_list  ir ao estado 4
    declaration       ir ao estado 5
    var_declaration   ir ao estado 6
    fun_declaration   ir ao estado 7
    fun_decl_head     ir ao estado 8
    type_specifier    ir ao estado 9


Estado 1

   12 type_specifier: INT .

    $padrão  reduzir usando a regra 12 (type_specifier)


Estado 2

   13 type_specifier: VOID .

    $padrão  reduzir usando a regra 13 (type_specifier)


Estado 3

    0 $accept: program . $end

    $end  deslocar, e ir ao estado 10


Estado 4

    2 program: declaration_list .
    3 declaration_list: declaration_list . declaration

    INT   deslocar, e ir ao estado 1
    VOID  deslocar, e ir ao estado 2

    $padrão  reduzir usando a regra 2 (program)

    declaration      ir ao estado 11
    var_declaration  ir ao estado 6
    fun_declaration  ir ao estado 7
    fun_decl_head    ir ao estado 8
    type_specifier   ir ao estado 9


Estado 5

    4 declaration_list: declaration .

    $padrão  reduzir usando a regra 4 (declaration_list)


Estado 6

    6 declaration: var_declaration .

    $padrão  reduzir usando a regra 6 (declaration)


Estado 7

    5 declaration: fun_declaration .

    $padrão  reduzir usando a regra 5 (declaration)


Estado 8

   10 fun_declaration: fun_decl_head . params R_PAR $@1 compound_stmt

    VOID  deslocar, e ir ao estado 12

    VOID      [reduzir usando a regra 14 ($@2)]
    $padrão  reduzir usando a regra 14 ($@2)

    params  ir ao estado 13
    $@2     ir ao estado 14


Estado 9

    7 var_declaration: type_specifier . ID SEMIC
    8                | type_specifier . ID L_BRA NUM R_BRA SEMIC
   11 fun_decl_head: type_specifier . ID L_PAR

    ID  deslocar, e ir ao estado 15


Estado 10

    0 $accept: program $end .

    $padrão  aceitar


Estado 11

    3 declaration_list: declaration_list declaration .

    $padrão  reduzir usando a regra 3 (declaration_list)


Estado 12

   16 params: VOID .

    $padrão  reduzir usando a regra 16 (params)


Estado 13

   10 fun_declaration: fun_decl_head params . R_PAR $@1 compound_stmt

    R_PAR  deslocar, e ir ao estado 16


Estado 14

   15 params: $@2 . param_list

    INT   deslocar, e ir ao estado 1
    VOID  deslocar, e ir ao estado 2

    type_specifier  ir ao estado 17
    param_list      ir ao estado 18
    param           ir ao estado 19


Estado 15

    7 var_declaration: type_specifier ID . SEMIC
    8                | type_specifier ID . L_BRA NUM R_BRA SEMIC
   11 fun_decl_head: type_specifier ID . L_PAR

    L_PAR  deslocar, e ir ao estado 20
    L_BRA  deslocar, e ir ao estado 21
    SEMIC  deslocar, e ir ao estado 22


Estado 16

   10 fun_declaration: fun_decl_head params R_PAR . $@1 compound_stmt

    $padrão  reduzir usando a regra 9 ($@1)

    $@1  ir ao estado 23


Estado 17

   19 param: type_specifier . ID
   20      | type_specifier . ID L_BRA R_BRA

    ID  deslocar, e ir ao estado 24


Estado 18

   15 params: $@2 param_list .
   17 param_list: param_list . COMMA param

    COMMA  deslocar, e ir ao estado 25

    $padrão  reduzir usando a regra 15 (params)


Estado 19

   18 param_list: param .

    $padrão  reduzir usando a regra 18 (param_list)


Estado 20

   11 fun_decl_head: type_specifier ID L_PAR .

    $padrão  reduzir usando a regra 11 (fun_decl_head)


Estado 21

    8 var_declaration: type_specifier ID L_BRA . NUM R_BRA SEMIC

    NUM  deslocar, e ir ao estado 26


Estado 22

    7 var_declaration: type_specifier ID SEMIC .

    $padrão  reduzir usando a regra 7 (var_declaration)


Estado 23

   10 fun_declaration: fun_decl_head params R_PAR $@1 . compound_stmt

    L_CUR  deslocar, e ir ao estado 27

    compound_stmt  ir ao estado 28
    open_compd     ir ao estado 29


Estado 24

   19 param: type_specifier ID .
   20      | type_specifier ID . L_BRA R_BRA

    L_BRA  deslocar, e ir ao estado 30

    $padrão  reduzir usando a regra 19 (param)


Estado 25

   17 param_list: param_list COMMA . param

    INT   deslocar, e ir ao estado 1
    VOID  deslocar, e ir ao estado 2

    type_specifier  ir ao estado 17
    param           ir ao estado 31


Estado 26

    8 var_declaration: type_specifier ID L_BRA NUM . R_BRA SEMIC

    R_BRA  deslocar, e ir ao estado 32


Estado 27

   22 open_compd: L_CUR .

    $padrão  reduzir usando a regra 22 (open_compd)


Estado 28

   10 fun_declaration: fun_decl_head params R_PAR $@1 compound_stmt .

    $padrão  reduzir usando a regra 10 (fun_declaration)


Estado 29

   21 compound_stmt: open_compd . local_declarations statement_list close_compd

    $padrão  reduzir usando a regra 24 (local_declarations)

    local_declarations  ir ao estado 33


Estado 30

   20 param: type_specifier ID L_BRA . R_BRA

    R_BRA  deslocar, e ir ao estado 34


Estado 31

   17 param_list: param_list COMMA param .

    $padrão  reduzir usando a regra 17 (param_list)


Estado 32

    8 var_declaration: type_specifier ID L_BRA NUM R_BRA . SEMIC

    SEMIC  deslocar, e ir ao estado 35


Estado 33

   21 compound_stmt: open_compd local_declarations . statement_list close_compd
   25 local_declarations: local_declarations . var_declaration

    INT   deslocar, e ir ao estado 1
    VOID  deslocar, e ir ao estado 2

    $padrão  reduzir usando a regra 26 (statement_list)

    var_declaration  ir ao estado 36
    type_specifier   ir ao estado 37
    statement_list   ir ao estado 38


Estado 34

   20 param: type_specifier ID L_BRA R_BRA .

    $padrão  reduzir usando a regra 20 (param)


Estado 35

    8 var_declaration: type_specifier ID L_BRA NUM R_BRA SEMIC .

    $padrão  reduzir usando a regra 8 (var_declaration)


Estado 36

   25 local_declarations: local_declarations var_declaration .

    $padrão  reduzir usando a regra 25 (local_declarations)


Estado 37

    7 var_declaration: type_specifier . ID SEMIC
    8                | type_specifier . ID L_BRA NUM R_BRA SEMIC

    ID  deslocar, e ir ao estado 39


Estado 38

   21 compound_stmt: open_compd local_declarations statement_list . close_compd
   27 statement_list: statement_list . statement

    NUM    deslocar, e ir ao estado 40
    ID     deslocar, e ir ao estado 41
    L_PAR  deslocar, e ir ao estado 42
    L_CUR  deslocar, e ir ao estado 27
    R_CUR  deslocar, e ir ao estado 43
    SEMIC  deslocar, e ir ao estado 44
    IF     deslocar, e ir ao estado 45
    WHILE  deslocar, e ir ao estado 46
    RET    deslocar, e ir ao estado 47

    compound_stmt        ir ao estado 48
    open_compd           ir ao estado 29
    close_compd          ir ao estado 49
    statement            ir ao estado 50
    selection_stmt       ir ao estado 51
    selection_head       ir ao estado 52
    iteration_stmt       ir ao estado 53
    iteration_head       ir ao estado 54
    return_stmt          ir ao estado 55
    expression_stmt      ir ao estado 56
    expression           ir ao estado 57
    simple_expression    ir ao estado 58
    additive_expression  ir ao estado 59
    term                 ir ao estado 60
    factor               ir ao estado 61
    var                  ir ao estado 62
    call                 ir ao estado 63


Estado 39

    7 var_declaration: type_specifier ID . SEMIC
    8                | type_specifier ID . L_BRA NUM R_BRA SEMIC

    L_BRA  deslocar, e ir ao estado 21
    SEMIC  deslocar, e ir ao estado 22


Estado 40

   73 factor: NUM .

    $padrão  reduzir usando a regra 73 (factor)


Estado 41

   74 var: ID .
   76    | ID . L_BRA $@7 expression R_BRA
   77 call: ID . L_PAR args R_PAR

    L_PAR  deslocar, e ir ao estado 64
    L_BRA  deslocar, e ir ao estado 65

    $padrão  reduzir usando a regra 74 (var)


Estado 42

   70 factor: L_PAR . expression R_PAR

    NUM    deslocar, e ir ao estado 40
    ID     deslocar, e ir ao estado 41
    L_PAR  deslocar, e ir ao estado 42

    expression           ir ao estado 66
    simple_expression    ir ao estado 58
    additive_expression  ir ao estado 59
    term                 ir ao estado 60
    factor               ir ao estado 61
    var                  ir ao estado 62
    call                 ir ao estado 63


Estado 43

   23 close_compd: R_CUR .

    $padrão  reduzir usando a regra 23 (close_compd)


Estado 44

   47 expression_stmt: SEMIC .

    $padrão  reduzir usando a regra 47 (expression_stmt)


Estado 45

   35 selection_head: IF . L_PAR expression R_PAR

    L_PAR  deslocar, e ir ao estado 67


Estado 46

   37 iteration_head: WHILE . L_PAR expression R_PAR

    L_PAR  deslocar, e ir ao estado 68


Estado 47

   44 return_stmt: RET . SEMIC
   45            | RET . expression SEMIC

    NUM    deslocar, e ir ao estado 40
    ID     deslocar, e ir ao estado 41
    L_PAR  deslocar, e ir ao estado 42
    SEMIC  deslocar, e ir ao estado 69

    expression           ir ao estado 70
    simple_expression    ir ao estado 58
    additive_expression  ir ao estado 59
    term                 ir ao estado 60
    factor               ir ao estado 61
    var                  ir ao estado 62
    call                 ir ao estado 63


Estado 48

   29 statement: compound_stmt .

    $padrão  reduzir usando a regra 29 (statement)


Estado 49

   21 compound_stmt: open_compd local_declarations statement_list close_compd .

    $padrão  reduzir usando a regra 21 (compound_stmt)


Estado 50

   27 statement_list: statement_list statement .

    $padrão  reduzir usando a regra 27 (statement_list)


Estado 51

   30 statement: selection_stmt .

    $padrão  reduzir usando a regra 30 (statement)


Estado 52

   33 selection_stmt: selection_head . scope_stmt
   34               | selection_head . scope_stmt ELSE scope_stmt

    NUM    deslocar, e ir ao estado 40
    ID     deslocar, e ir ao estado 41
    L_PAR  deslocar, e ir ao estado 42
    L_CUR  deslocar, e ir ao estado 27
    SEMIC  deslocar, e ir ao estado 44
    IF     deslocar, e ir ao estado 45
    WHILE  deslocar, e ir ao estado 46
    RET    deslocar, e ir ao estado 47

    compound_stmt        ir ao estado 71
    open_compd           ir ao estado 29
    selection_stmt       ir ao estado 72
    selection_head       ir ao estado 52
    iteration_stmt       ir ao estado 73
    iteration_head       ir ao estado 54
    scope_stmt           ir ao estado 74
    common_stmt          ir ao estado 75
    return_stmt          ir ao estado 76
    expression_stmt      ir ao estado 77
    expression           ir ao estado 57
    simple_expression    ir ao estado 58
    additive_expression  ir ao estado 59
    term                 ir ao estado 60
    factor               ir ao estado 61
    var                  ir ao estado 62
    call                 ir ao estado 63


Estado 53

   31 statement: iteration_stmt .

    $padrão  reduzir usando a regra 31 (statement)


Estado 54

   36 iteration_stmt: iteration_head . scope_stmt

    NUM    deslocar, e ir ao estado 40
    ID     deslocar, e ir ao estado 41
    L_PAR  deslocar, e ir ao estado 42
    L_CUR  deslocar, e ir ao estado 27
    SEMIC  deslocar, e ir ao estado 44
    IF     deslocar, e ir ao estado 45
    WHILE  deslocar, e ir ao estado 46
    RET    deslocar, e ir ao estado 47

    compound_stmt        ir ao estado 71
    open_compd           ir ao estado 29
    selection_stmt       ir ao estado 72
    selection_head       ir ao estado 52
    iteration_stmt       ir ao estado 73
    iteration_head       ir ao estado 54
    scope_stmt           ir ao estado 78
    common_stmt          ir ao estado 75
    return_stmt          ir ao estado 76
    expression_stmt      ir ao estado 77
    expression           ir ao estado 57
    simple_expression    ir ao estado 58
    additive_expression  ir ao estado 59
    term                 ir ao estado 60
    factor               ir ao estado 61
    var                  ir ao estado 62
    call                 ir ao estado 63


Estado 55

   32 statement: return_stmt .

    $padrão  reduzir usando a regra 32 (statement)


Estado 56

   28 statement: expression_stmt .

    $padrão  reduzir usando a regra 28 (statement)


Estado 57

   46 expression_stmt: expression . SEMIC

    SEMIC  deslocar, e ir ao estado 79


Estado 58

   50 expression: simple_expression .

    $padrão  reduzir usando a regra 50 (expression)


Estado 59

   52 simple_expression: additive_expression . relop $@4 additive_expression
   53                  | additive_expression .
   61 additive_expression: additive_expression . addop $@5 term

    ADD  deslocar, e ir ao estado 80
    SUB  deslocar, e ir ao estado 81
    LT   deslocar, e ir ao estado 82
    GT   deslocar, e ir ao estado 83
    LTE  deslocar, e ir ao estado 84
    GTE  deslocar, e ir ao estado 85
    EQ   deslocar, e ir ao estado 86
    NEQ  deslocar, e ir ao estado 87

    $padrão  reduzir usando a regra 53 (simple_expression)

    relop  ir ao estado 88
    addop  ir ao estado 89


Estado 60

   62 additive_expression: term .
   66 term: term . mulop $@6 factor

    MUL  deslocar, e ir ao estado 90
    DIV  deslocar, e ir ao estado 91

    $padrão  reduzir usando a regra 62 (additive_expression)

    mulop  ir ao estado 92


Estado 61

   67 term: factor .

    $padrão  reduzir usando a regra 67 (term)


Estado 62

   49 expression: var . ASGN $@3 expression
   71 factor: var .

    ASGN  deslocar, e ir ao estado 93

    $padrão  reduzir usando a regra 71 (factor)


Estado 63

   72 factor: call .

    $padrão  reduzir usando a regra 72 (factor)


Estado 64

   77 call: ID L_PAR . args R_PAR

    NUM    deslocar, e ir ao estado 40
    ID     deslocar, e ir ao estado 41
    L_PAR  deslocar, e ir ao estado 42

    $padrão  reduzir usando a regra 78 (args)

    expression           ir ao estado 94
    simple_expression    ir ao estado 58
    additive_expression  ir ao estado 59
    term                 ir ao estado 60
    factor               ir ao estado 61
    var                  ir ao estado 62
    call                 ir ao estado 63
    args                 ir ao estado 95
    arg_list             ir ao estado 96


Estado 65

   76 var: ID L_BRA . $@7 expression R_BRA

    $padrão  reduzir usando a regra 75 ($@7)

    $@7  ir ao estado 97


Estado 66

   70 factor: L_PAR expression . R_PAR

    R_PAR  deslocar, e ir ao estado 98


Estado 67

   35 selection_head: IF L_PAR . expression R_PAR

    NUM    deslocar, e ir ao estado 40
    ID     deslocar, e ir ao estado 41
    L_PAR  deslocar, e ir ao estado 42

    expression           ir ao estado 99
    simple_expression    ir ao estado 58
    additive_expression  ir ao estado 59
    term                 ir ao estado 60
    factor               ir ao estado 61
    var                  ir ao estado 62
    call                 ir ao estado 63


Estado 68

   37 iteration_head: WHILE L_PAR . expression R_PAR

    NUM    deslocar, e ir ao estado 40
    ID     deslocar, e ir ao estado 41
    L_PAR  deslocar, e ir ao estado 42

    expression           ir ao estado 100
    simple_expression    ir ao estado 58
    additive_expression  ir ao estado 59
    term                 ir ao estado 60
    factor               ir ao estado 61
    var                  ir ao estado 62
    call                 ir ao estado 63


Estado 69

   44 return_stmt: RET SEMIC .

    $padrão  reduzir usando a regra 44 (return_stmt)


Estado 70

   45 return_stmt: RET expression . SEMIC

    SEMIC  deslocar, e ir ao estado 101


Estado 71

   41 common_stmt: compound_stmt .

    $padrão  reduzir usando a regra 41 (common_stmt)


Estado 72

   42 common_stmt: selection_stmt .

    $padrão  reduzir usando a regra 42 (common_stmt)


Estado 73

   43 common_stmt: iteration_stmt .

    $padrão  reduzir usando a regra 43 (common_stmt)


Estado 74

   33 selection_stmt: selection_head scope_stmt .
   34               | selection_head scope_stmt . ELSE scope_stmt

    ELSE  deslocar, e ir ao estado 102

    ELSE      [reduzir usando a regra 33 (selection_stmt)]
    $padrão  reduzir usando a regra 33 (selection_stmt)


Estado 75

   39 scope_stmt: common_stmt .

    $padrão  reduzir usando a regra 39 (scope_stmt)


Estado 76

   38 scope_stmt: return_stmt .

    $padrão  reduzir usando a regra 38 (scope_stmt)


Estado 77

   40 common_stmt: expression_stmt .

    $padrão  reduzir usando a regra 40 (common_stmt)


Estado 78

   36 iteration_stmt: iteration_head scope_stmt .

    $padrão  reduzir usando a regra 36 (iteration_stmt)


Estado 79

   46 expression_stmt: expression SEMIC .

    $padrão  reduzir usando a regra 46 (expression_stmt)


Estado 80

   63 addop: ADD .

    $padrão  reduzir usando a regra 63 (addop)


Estado 81

   64 addop: SUB .

    $padrão  reduzir usando a regra 64 (addop)


Estado 82

   56 relop: LT .

    $padrão  reduzir usando a regra 56 (relop)


Estado 83

   57 relop: GT .

    $padrão  reduzir usando a regra 57 (relop)


Estado 84

   54 relop: LTE .

    $padrão  reduzir usando a regra 54 (relop)


Estado 85

   55 relop: GTE .

    $padrão  reduzir usando a regra 55 (relop)


Estado 86

   58 relop: EQ .

    $padrão  reduzir usando a regra 58 (relop)


Estado 87

   59 relop: NEQ .

    $padrão  reduzir usando a regra 59 (relop)


Estado 88

   52 simple_expression: additive_expression relop . $@4 additive_expression

    $padrão  reduzir usando a regra 51 ($@4)

    $@4  ir ao estado 103


Estado 89

   61 additive_expression: additive_expression addop . $@5 term

    $padrão  reduzir usando a regra 60 ($@5)

    $@5  ir ao estado 104


Estado 90

   68 mulop: MUL .

    $padrão  reduzir usando a regra 68 (mulop)


Estado 91

   69 mulop: DIV .

    $padrão  reduzir usando a regra 69 (mulop)


Estado 92

   66 term: term mulop . $@6 factor

    $padrão  reduzir usando a regra 65 ($@6)

    $@6  ir ao estado 105


Estado 93

   49 expression: var ASGN . $@3 expression

    $padrão  reduzir usando a regra 48 ($@3)

    $@3  ir ao estado 106


Estado 94

   81 arg_list: expression .

    $padrão  reduzir usando a regra 81 (arg_list)


Estado 95

   77 call: ID L_PAR args . R_PAR

    R_PAR  deslocar, e ir ao estado 107


Estado 96

   79 args: arg_list .
   80 arg_list: arg_list . COMMA expression

    COMMA  deslocar, e ir ao estado 108

    $padrão  reduzir usando a regra 79 (args)


Estado 97

   76 var: ID L_BRA $@7 . expression R_BRA

    NUM    deslocar, e ir ao estado 40
    ID     deslocar, e ir ao estado 41
    L_PAR  deslocar, e ir ao estado 42

    expression           ir ao estado 109
    simple_expression    ir ao estado 58
    additive_expression  ir ao estado 59
    term                 ir ao estado 60
    factor               ir ao estado 61
    var                  ir ao estado 62
    call                 ir ao estado 63


Estado 98

   70 factor: L_PAR expression R_PAR .

    $padrão  reduzir usando a regra 70 (factor)


Estado 99

   35 selection_head: IF L_PAR expression . R_PAR

    R_PAR  deslocar, e ir ao estado 110


Estado 100

   37 iteration_head: WHILE L_PAR expression . R_PAR

    R_PAR  deslocar, e ir ao estado 111


Estado 101

   45 return_stmt: RET expression SEMIC .

    $padrão  reduzir usando a regra 45 (return_stmt)


Estado 102

   34 selection_stmt: selection_head scope_stmt ELSE . scope_stmt

    NUM    deslocar, e ir ao estado 40
    ID     deslocar, e ir ao estado 41
    L_PAR  deslocar, e ir ao estado 42
    L_CUR  deslocar, e ir ao estado 27
    SEMIC  deslocar, e ir ao estado 44
    IF     deslocar, e ir ao estado 45
    WHILE  deslocar, e ir ao estado 46
    RET    deslocar, e ir ao estado 47

    compound_stmt        ir ao estado 71
    open_compd           ir ao estado 29
    selection_stmt       ir ao estado 72
    selection_head       ir ao estado 52
    iteration_stmt       ir ao estado 73
    iteration_head       ir ao estado 54
    scope_stmt           ir ao estado 112
    common_stmt          ir ao estado 75
    return_stmt          ir ao estado 76
    expression_stmt      ir ao estado 77
    expression           ir ao estado 57
    simple_expression    ir ao estado 58
    additive_expression  ir ao estado 59
    term                 ir ao estado 60
    factor               ir ao estado 61
    var                  ir ao estado 62
    call                 ir ao estado 63


Estado 103

   52 simple_expression: additive_expression relop $@4 . additive_expression

    NUM    deslocar, e ir ao estado 40
    ID     deslocar, e ir ao estado 41
    L_PAR  deslocar, e ir ao estado 42

    additive_expression  ir ao estado 113
    term                 ir ao estado 60
    factor               ir ao estado 61
    var                  ir ao estado 114
    call                 ir ao estado 63


Estado 104

   61 additive_expression: additive_expression addop $@5 . term

    NUM    deslocar, e ir ao estado 40
    ID     deslocar, e ir ao estado 41
    L_PAR  deslocar, e ir ao estado 42

    term    ir ao estado 115
    factor  ir ao estado 61
    var     ir ao estado 114
    call    ir ao estado 63


Estado 105

   66 term: term mulop $@6 . factor

    NUM    deslocar, e ir ao estado 40
    ID     deslocar, e ir ao estado 41
    L_PAR  deslocar, e ir ao estado 42

    factor  ir ao estado 116
    var     ir ao estado 114
    call    ir ao estado 63


Estado 106

   49 expression: var ASGN $@3 . expression

    NUM    deslocar, e ir ao estado 40
    ID     deslocar, e ir ao estado 41
    L_PAR  deslocar, e ir ao estado 42

    expression           ir ao estado 117
    simple_expression    ir ao estado 58
    additive_expression  ir ao estado 59
    term                 ir ao estado 60
    factor               ir ao estado 61
    var                  ir ao estado 62
    call                 ir ao estado 63


Estado 107

   77 call: ID L_PAR args R_PAR .

    $padrão  reduzir usando a regra 77 (call)


Estado 108

   80 arg_list: arg_list COMMA . expression

    NUM    deslocar, e ir ao estado 40
    ID     deslocar, e ir ao estado 41
    L_PAR  deslocar, e ir ao estado 42

    expression           ir ao estado 118
    simple_expression    ir ao estado 58
    additive_expression  ir ao estado 59
    term                 ir ao estado 60
    factor               ir ao estado 61
    var                  ir ao estado 62
    call                 ir ao estado 63


Estado 109

   76 var: ID L_BRA $@7 expression . R_BRA

    R_BRA  deslocar, e ir ao estado 119


Estado 110

   35 selection_head: IF L_PAR expression R_PAR .

    $padrão  reduzir usando a regra 35 (selection_head)


Estado 111

   37 iteration_head: WHILE L_PAR expression R_PAR .

    $padrão  reduzir usando a regra 37 (iteration_head)


Estado 112

   34 selection_stmt: selection_head scope_stmt ELSE scope_stmt .

    $padrão  reduzir usando a regra 34 (selection_stmt)


Estado 113

   52 simple_expression: additive_expression relop $@4 additive_expression .
   61 additive_expression: additive_expression . addop $@5 term

    ADD  deslocar, e ir ao estado 80
    SUB  deslocar, e ir ao estado 81

    $padrão  reduzir usando a regra 52 (simple_expression)

    addop  ir ao estado 89


Estado 114

   71 factor: var .

    $padrão  reduzir usando a regra 71 (factor)


Estado 115

   61 additive_expression: additive_expression addop $@5 term .
   66 term: term . mulop $@6 factor

    MUL  deslocar, e ir ao estado 90
    DIV  deslocar, e ir ao estado 91

    $padrão  reduzir usando a regra 61 (additive_expression)

    mulop  ir ao estado 92


Estado 116

   66 term: term mulop $@6 factor .

    $padrão  reduzir usando a regra 66 (term)


Estado 117

   49 expression: var ASGN $@3 expression .

    $padrão  reduzir usando a regra 49 (expression)


Estado 118

   80 arg_list: arg_list COMMA expression .

    $padrão  reduzir usando a regra 80 (arg_list)


Estado 119

   76 var: ID L_BRA $@7 expression R_BRA .

    $padrão  reduzir usando a regra 76 (var)
